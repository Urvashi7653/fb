// The useReducer Hook is similar to the useState Hook.It allows for custom state logic.If you find yourself keeping track of multiple pieces of state that rely on complex logic, useReducer may be useful.

//   const [state, dispatch] = useReducer(reducer, initialState);
// https://dmitripavlutin.com/react-usereducer/#:~:text=The%20reducer%20function%20uses%20the,%5BnewState%2C%20...%5D

//Enable Reinitialize : Default is false. Control whether Formik should reset the form if initialValues changes.

//app.use(cors());
//const cors = require("cors");

//fs.appendFile(): append data to a file. If the file does not exist, it's created

//One peculiar thing about the fs module is that all the methods are asynchronous by default, but they can also work synchronously by appending Sync.

// //SPREAD OPERATOR
// const numbers = [1, 2, 3, 4, 5, 6];
// const [one, two, ...rest] = numbers;
<div className="home_middle">
        <div className="home">
          <div className="posts">
            {adminPosts.map((post) => (
              <Post key={post._id} post={post} />
            ))}
          </div>
        </div>
      </div>